"""upload_supplier_master_data

Revision ID: 342350439476
Revises: c79b0938ea4b
Create Date: 2025-01-24 10:32:36.955536

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "342350439476"
down_revision = "c79b0938ea4b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "upload_supplier_master_data",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uploaded_name", sa.String(length=255), nullable=True),
        sa.Column("uploaded_name_international", sa.String(length=255), nullable=True),
        sa.Column("uploaded_address", sa.Text(), nullable=True),
        sa.Column("uploaded_postcode", sa.String(length=20), nullable=True),
        sa.Column("uploaded_city", sa.String(length=100), nullable=True),
        sa.Column("uploaded_country", sa.String(length=100), nullable=True),
        sa.Column("uploaded_phone_or_fax", sa.String(length=50), nullable=True),
        sa.Column("uploaded_email_or_website", sa.String(length=100), nullable=True),
        sa.Column("uploaded_national_id", sa.String(length=50), nullable=True),
        sa.Column("uploaded_state", sa.String(length=100), nullable=True),
        sa.Column("uploaded_address_type", sa.String(length=50), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("name_international", sa.String(length=255), nullable=True),
        sa.Column("address", sa.Text(), nullable=True),
        sa.Column("postcode", sa.String(length=20), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=True),
        sa.Column("country", sa.String(length=100), nullable=True),
        sa.Column("phone_or_fax", sa.String(length=50), nullable=True),
        sa.Column("email_or_website", sa.String(length=100), nullable=True),
        sa.Column("national_id", sa.String(length=50), nullable=True),
        sa.Column("state", sa.String(length=100), nullable=True),
        sa.Column("address_type", sa.String(length=50), nullable=True),
        sa.Column("suggested_name", sa.String(length=255), nullable=True),
        sa.Column("suggested_name_international", sa.String(length=255), nullable=True),
        sa.Column("suggested_address", sa.Text(), nullable=True),
        sa.Column("suggested_postcode", sa.String(length=20), nullable=True),
        sa.Column("suggested_city", sa.String(length=100), nullable=True),
        sa.Column("suggested_country", sa.String(length=100), nullable=True),
        sa.Column("suggested_phone_or_fax", sa.String(length=50), nullable=True),
        sa.Column("suggested_email_or_website", sa.String(length=100), nullable=True),
        sa.Column("suggested_national_id", sa.String(length=50), nullable=True),
        sa.Column("suggested_state", sa.String(length=100), nullable=True),
        sa.Column("suggested_address_type", sa.String(length=50), nullable=True),
        sa.Column("ens_id", sa.String(length=50), nullable=False),
        sa.Column("session_id", sa.String(length=50), nullable=False),
        sa.Column("bvd_id", sa.String(length=50), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_index("ix_users_table_email", table_name="users_table")
    op.drop_index("ix_users_table_id", table_name="users_table")
    op.drop_index("ix_users_table_user_id", table_name="users_table")
    op.drop_index("ix_users_table_username", table_name="users_table")
    op.drop_table("users_table")
    op.drop_table("sown")
    op.drop_table("lgrk")
    op.drop_table("fstb")
    op.drop_table("external_supplier_data")
    op.drop_table("supplier_master_data")
    op.drop_table("matchbvdid")
    op.drop_table("oval")
    op.drop_table("rfct")
    op.drop_table("kpi_master_data")
    op.drop_table("ovar")
    op.drop_table("sape")
    op.drop_table("orgdata")
    op.drop_table("cyes")
    op.drop_table("news")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "news",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("kpi_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("kpi_details", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ens_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="news_pkey"),
    )
    op.create_table(
        "cyes",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("kpi_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("kpi_details", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ens_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="cyes_pkey"),
    )
    op.create_table(
        "orgdata",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "orgname", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column(
            "orgidentifier", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column("bvdids", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="orgdata_pkey"),
        sa.UniqueConstraint("bvdids", name="orgdata_bvdids_key"),
        sa.UniqueConstraint("orgidentifier", name="orgdata_orgidentifier_key"),
    )
    op.create_table(
        "sape",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("kpi_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("kpi_details", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ens_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="sape_pkey"),
    )
    op.create_table(
        "ovar",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("kpi_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("kpi_details", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ens_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="ovar_pkey"),
    )
    op.create_table(
        "kpi_master_data",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("kpi_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("kpi_details", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ens_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="kpi_master_data_pkey"),
    )
    op.create_table(
        "rfct",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("kpi_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("kpi_details", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ens_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="rfct_pkey"),
    )
    op.create_table(
        "oval",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("kpi_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("kpi_details", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ens_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="oval_pkey"),
    )
    op.create_table(
        "matchbvdid",
        sa.Column("bvdid", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "name_international",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "postcode", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column("city", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "country", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "phone_or_fax", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "email_or_website",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "national_id", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("state", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "address_type", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "ens_id", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("ens_id", name="matchbvdid_pkey"),
    )
    op.create_table(
        "supplier_master_data",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "uploaded_name", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "uploaded_country",
            sa.VARCHAR(length=100),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "uploaded_national_id",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "uploaded_state", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column(
            "uploaded_city", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column("uploaded_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "uploaded_postcode",
            sa.VARCHAR(length=20),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "uploaded_email_or_website",
            sa.VARCHAR(length=100),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "uploaded_phone_or_fax",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("ens_id", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column("bvd_id", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "name_international",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "postcode", sa.VARCHAR(length=20), autoincrement=False, nullable=True
        ),
        sa.Column("city", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column(
            "country", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column(
            "phone_or_fax", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column(
            "email_or_website",
            sa.VARCHAR(length=100),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "national_id", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column("state", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column(
            "address_type", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "suggested_name", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="supplier_master_data_pkey"),
    )
    op.create_table(
        "external_supplier_data",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column("country", sa.VARCHAR(length=20), autoincrement=False, nullable=True),
        sa.Column(
            "location", sa.VARCHAR(length=30), autoincrement=False, nullable=True
        ),
        sa.Column("address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "is_active", sa.VARCHAR(length=15), autoincrement=False, nullable=True
        ),
        sa.Column(
            "operation_type", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column(
            "legal_form", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column("bvd_id", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column(
            "national_identifier_type",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "national_identifier",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("alias", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("incorporation_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("num_subsidiaries", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "num_companies_in_corp_grp",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "num_direct_shareholders", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "operating_revenue",
            sa.NUMERIC(precision=18, scale=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "profit_loss_after_tax",
            sa.NUMERIC(precision=18, scale=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "debt_to_equity_ratio",
            sa.NUMERIC(precision=10, scale=4),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "ebitda",
            sa.NUMERIC(precision=18, scale=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "current_ratio",
            sa.NUMERIC(precision=10, scale=4),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "roe_using_net_income",
            sa.NUMERIC(precision=10, scale=4),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("pl_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "pr_qualitative_score",
            sa.VARCHAR(length=1),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "pr_more_risk_score",
            sa.VARCHAR(length=3),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "pr_reactive_more_risk_score",
            sa.VARCHAR(length=3),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "pr_qualitative_score_date", sa.DATE(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "pr_more_risk_score_date", sa.DATE(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "pr_reactive_more_risk_score_date",
            sa.DATE(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "payment_risk_score",
            sa.NUMERIC(precision=4, scale=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "event",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "esg_overall_rating",
            sa.NUMERIC(precision=3, scale=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "esg_environmental_rating",
            sa.NUMERIC(precision=3, scale=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "esg_social_rating",
            sa.NUMERIC(precision=5, scale=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "esg_governance_rating",
            sa.NUMERIC(precision=3, scale=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("esg_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "cyber_risk_score",
            sa.NUMERIC(precision=4, scale=2),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "cyber_botnet_infection",
            sa.VARCHAR(length=1),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "cyber_malware_servers",
            sa.VARCHAR(length=1),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "cyber_ssl_certificate",
            sa.VARCHAR(length=1),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "cyber_webpage_headers",
            sa.VARCHAR(length=1),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("cyber_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "implied_cyber_risk_score", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "implied_cyber_risk_score_date",
            sa.DATE(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "beneficial_owners",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "global_ultimate_owner",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "shareholders",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "ultimately_owned_subsidiaries",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "ultimate_beneficiary_owner",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "other_ultimate_beneficiary",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("ens_id", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="external_supplier_data_pkey"),
    )
    op.create_table(
        "fstb",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("kpi_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("kpi_details", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ens_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="fstb_pkey"),
    )
    op.create_table(
        "lgrk",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("kpi_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("kpi_details", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ens_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="lgrk_pkey"),
    )
    op.create_table(
        "sown",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("kpi_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("kpi_details", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ens_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="sown_pkey"),
    )
    op.create_table(
        "users_table",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("verified", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("otp", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="users_table_pkey"),
    )
    op.create_index("ix_users_table_username", "users_table", ["username"], unique=True)
    op.create_index("ix_users_table_user_id", "users_table", ["user_id"], unique=True)
    op.create_index("ix_users_table_id", "users_table", ["id"], unique=False)
    op.create_index("ix_users_table_email", "users_table", ["email"], unique=True)
    op.drop_table("upload_supplier_master_data")
    # ### end Alembic commands ###
