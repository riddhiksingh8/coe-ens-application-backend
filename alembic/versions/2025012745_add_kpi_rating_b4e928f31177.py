"""add kpi_rating

Revision ID: b4e928f31177
Revises: fba331cb6580
Create Date: 2025-01-27 16:45:29.576838

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "b4e928f31177"
down_revision = "fba331cb6580"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("orgdata")
    op.drop_table("kpi_master_data")
    op.drop_table("matchbvdid")
    op.add_column("cyes", sa.Column("kpi_rating", sa.String(), nullable=True))
    op.add_column("fstb", sa.Column("kpi_rating", sa.String(), nullable=True))
    op.add_column("lgrk", sa.Column("kpi_rating", sa.String(), nullable=True))
    op.add_column("news", sa.Column("kpi_rating", sa.String(), nullable=True))
    op.add_column("oval", sa.Column("kpi_rating", sa.String(), nullable=True))
    op.add_column("ovar", sa.Column("kpi_rating", sa.String(), nullable=True))
    op.add_column("rfct", sa.Column("kpi_rating", sa.String(), nullable=True))
    op.add_column("sape", sa.Column("kpi_rating", sa.String(), nullable=True))
    op.add_column("sown", sa.Column("kpi_rating", sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("sown", "kpi_rating")
    op.drop_column("sape", "kpi_rating")
    op.drop_column("rfct", "kpi_rating")
    op.drop_column("ovar", "kpi_rating")
    op.drop_column("oval", "kpi_rating")
    op.drop_column("news", "kpi_rating")
    op.drop_column("lgrk", "kpi_rating")
    op.drop_column("fstb", "kpi_rating")
    op.drop_column("cyes", "kpi_rating")
    op.create_table(
        "matchbvdid",
        sa.Column("bvdid", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "name_international",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "postcode", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column("city", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "country", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "phone_or_fax", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "email_or_website",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "national_id", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("state", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "address_type", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "ens_id", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("ens_id", name="matchbvdid_pkey"),
    )
    op.create_table(
        "kpi_master_data",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kpi_area", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("kpi_flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("kpi_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("kpi_details", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ens_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "create_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="kpi_master_data_pkey"),
    )
    op.create_table(
        "orgdata",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "orgname", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column(
            "orgidentifier", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column("bvdids", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="orgdata_pkey"),
        sa.UniqueConstraint("bvdids", name="orgdata_bvdids_key"),
        sa.UniqueConstraint("orgidentifier", name="orgdata_orgidentifier_key"),
    )
    # ### end Alembic commands ###
