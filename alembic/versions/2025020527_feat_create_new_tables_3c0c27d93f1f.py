"""feat: create new tables

Revision ID: 3c0c27d93f1f
Revises: d6f0d0f142d0
Create Date: 2025-02-05 13:27:49.893481

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "3c0c27d93f1f"
down_revision = "d6f0d0f142d0"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("orgdata")
    op.drop_table("matchbvdid")
    
    # Drop the old unique constraint
    op.drop_constraint("unique_ens_session_kpi", "cyes", type_="unique")

    op.create_unique_constraint(
        "unique_ensid_session_kpicode", "cyes", ["ens_id", "session_id", "kpi_code"]
    )
    op.create_unique_constraint(
        "unique_ensid_session_kpicode_fstb", "fstb", ["ens_id", "session_id", "kpi_code"]
    )
    op.create_unique_constraint(
        "unique_ensid_session_kpicode_lgrk", "lgrk", ["ens_id", "session_id", "kpi_code"]
    )
    op.create_unique_constraint(
        "unique_ensid_session_kpicode_news", "news", ["ens_id", "session_id", "kpi_code"]
    )
    op.create_unique_constraint(
        "unique_ensid_session_kpicode_oval", "oval", ["ens_id", "session_id", "kpi_code"]
    )
    op.create_unique_constraint(
        "unique_ensid_session_kpicode_ovar", "ovar", ["ens_id", "session_id", "kpi_code"]
    )
    op.create_unique_constraint(
        "unique_ensid_session_kpicode_rfct", "rfct", ["ens_id", "session_id", "kpi_code"]
    )
    op.create_unique_constraint(
        "unique_ensid_session_kpicode_sape", "sape", ["ens_id", "session_id", "kpi_code"]
    )
    op.create_unique_constraint(
        "unique_ensid_session_kpicode_sown", "sown", ["ens_id", "session_id", "kpi_code"]
    )
    # ### end Alembic commands ###


def downgrade():
        
    op.create_table(
        "matchbvdid",
        sa.Column("bvdid", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "name_international",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "postcode", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column("city", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "country", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "phone_or_fax", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "email_or_website",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "national_id", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("state", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "address_type", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "ens_id", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("ens_id", name="matchbvdid_pkey"),
    )
    op.create_table(
        "orgdata",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "orgname", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column(
            "orgidentifier", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column("bvdids", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="orgdata_pkey"),
        sa.UniqueConstraint("bvdids", name="orgdata_bvdids_key"),
        sa.UniqueConstraint("orgidentifier", name="orgdata_orgidentifier_key"),
    )
    # ### end Alembic commands ###
